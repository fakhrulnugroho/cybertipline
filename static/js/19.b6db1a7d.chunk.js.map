{"version":3,"sources":["constants/roles.js","utils/auth.js","routes.js","containers/TheContent.js","containers/TheFooter.js","containers/TheHeader.js","containers/TheHeaderDropdown.js","containers/_nav.js","containers/TheSidebar.js","containers/TheLayout.js"],"names":["Role","OPERATOR","ANALYST","MANAGER","Object","freeze","getUserData","userdata","localStorage","getItem","JSON","parse","getUserRole","parseInt","level","isRole","role","r","routes","path","exact","name","component","React","lazy","loading","className","style","height","size","TheContent","fluid","fallback","map","route","idx","render","props","from","to","memo","TheFooter","fixed","href","target","rel","TheHeader","dispatch","useDispatch","sidebarShow","useSelector","state","userRole","keys","find","i","withSubheader","inHeader","onClick","val","includes","type","alt","TheHeaderDropdown","_nav","_tag","icon","badge","color","text","roles","filteredNavChildrens","filteredNavs","filter","n","_children","c","length","TheSidebar","show","onShowChange","items","navigation","components","CSidebarNavDivider","CSidebarNavDropdown","CSidebarNavItem","CSidebarNavTitle","TheLayout"],"mappings":"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","file":"static/js/19.b6db1a7d.chunk.js","sourcesContent":["const Role = {\n  OPERATOR: 1,\n  ANALYST: 2,\n  MANAGER: 3\n}\n\nObject.freeze(Role);\n\nexport default Role;","export function getUserData() {\n  const userdata = localStorage.getItem(\"userdata\");\n  return userdata ? JSON.parse(userdata) : null;\n}\n\nexport function getUserRole() {\n  const userdata = getUserData();\n  return userdata ? parseInt(userdata.level) : null;\n}\n\nexport function isRole(role) {\n  const r = getUserRole();\n  if(r === null) return false;\n  else if(r === role) return true;\n  else return false; \n}","import React from \"react\";\n\nconst Dashboard = React.lazy(() => import(\"./pages/dashboard/Dashboard\"));\n// cyber tipline\nconst CyberTipline = React.lazy(() => import(\"./pages/cyberTipline/CyberTipline\"));\nconst CyberTiplineCreate = React.lazy(() => import(\"./pages/cyberTipline/CyberTiplineCreate\"));\nconst CyberTiplineEdit = React.lazy(() => import(\"./pages/cyberTipline/CyberTiplineEdit\"));\nconst CyberTiplineDetail = React.lazy(() => import(\"./pages/cyberTipline/CyberTiplineDetail\"));\nconst CyberTiplineReport = React.lazy(() => import(\"./pages/cyberTipline/CyberTiplineReport\"));\nconst CyberTiplineSearch = React.lazy(() => import(\"./pages/cyberTipline/CyberTiplineSearch\"));\n// user\nconst User = React.lazy(() => import(\"./pages/user/User\"));\nconst MyProfile = React.lazy(() => import(\"./pages/user/MyProfile\"));\n\nconst routes = [\n  { path: \"/\", exact: true, name: \"Home\" },\n  { path: \"/dashboard\", name: \"Dashboard\", component: Dashboard },\n  { path: \"/cyber-tipline\", name: \"Cyber Tipline\", component: CyberTipline, exact: true },\n  { path: \"/cyber-tipline/create\", name: \"Create\", component: CyberTiplineCreate, exact: true },\n  { path: \"/cyber-tipline/edit\", name: \"Edit\", component: CyberTiplineEdit, exact: true },\n  { path: \"/cyber-tipline/detail\", name: \"Detail\", component: CyberTiplineDetail, exact: true },\n  { path: \"/cyber-tipline/report\", name: \"Report\", component: CyberTiplineReport, exact: true },\n  { path: \"/cyber-tipline/search\", name: \"Search\", component: CyberTiplineSearch, exact: true },\n  { path: \"/user\", name: \"User\", component: User, exact: true },\n  { path: \"/user/my-profile\", name: \"My Profile\", component: MyProfile, exact: true },\n];\n\nexport default routes;\n","import React, { Suspense } from 'react'\nimport {\n  Redirect,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport { CContainer, CFade } from '@coreui/react'\nimport { GiSandsOfTime } from \"react-icons/gi\";\n\n// routes config\nimport routes from '../routes'\n  \nconst loading = (\n  <div className=\"d-flex justify-content-center align-items-end\" style={{height: 400}}>\n    <div className=\"text-center\">\n      <GiSandsOfTime size={256} />\n      <h1 className=\"mt-4\">Loading...</h1>\n    </div>\n  </div>\n)\n\nconst TheContent = () => {\n  return (\n    <main className=\"c-main\">\n      <CContainer fluid>\n        <Suspense fallback={loading}>\n          <Switch>\n            {routes.map((route, idx) => {\n              return route.component && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  render={props => (\n                    <CFade>\n                      <route.component {...props} />\n                    </CFade>\n                  )} />\n              )\n            })}\n            <Redirect from=\"/\" to=\"/dashboard\" />\n          </Switch>\n        </Suspense>\n      </CContainer>\n    </main>\n  )\n}\n\nexport default React.memo(TheContent)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst TheFooter = () => {\n  return (\n    <CFooter fixed={false}>\n      <div>\n        <a href=\"https://coreui.io\" target=\"_blank\" rel=\"noopener noreferrer\">CoreUI</a>\n        <span className=\"ml-1\">&copy; 2020 creativeLabs.</span>\n      </div>\n      <div className=\"mfs-auto\">\n        <span className=\"mr-1\">Powered by</span>\n        <a href=\"https://coreui.io/react\" target=\"_blank\" rel=\"noopener noreferrer\">CoreUI for React</a>\n      </div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(TheFooter)\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CHeader,\n  CToggler,\n  CHeaderBrand,\n  CHeaderNav,\n  CHeaderNavItem,\n  CHeaderNavLink,\n  CSubheader,\n  CBreadcrumbRouter,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\n// routes config\nimport routes from '../routes'\n\nimport { TheHeaderDropdown }  from './index';\nimport { getUserData } from \"../utils/auth\";\nimport Role from \"../constants/roles\";\n\nconst TheHeader = () => {\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector(state => state.sidebarShow)\n  const userdata = getUserData();\n\n  const userRole = Object.keys(Role).find((r, i) => i + 1 === parseInt(userdata.level));\n\n  const toggleSidebar = () => {\n    const val = [true, 'responsive'].includes(sidebarShow) ? false : 'responsive'\n    dispatch({type: 'set', sidebarShow: val})\n  }\n\n  const toggleSidebarMobile = () => {\n    const val = [false, 'responsive'].includes(sidebarShow) ? true : 'responsive'\n    dispatch({type: 'set', sidebarShow: val})\n  }\n\n  return (\n    <CHeader withSubheader>\n      <CToggler\n        inHeader\n        className=\"ml-md-3 d-lg-none\"\n        onClick={toggleSidebarMobile}\n      />\n      <CToggler\n        inHeader\n        className=\"ml-3 d-md-down-none\"\n        onClick={toggleSidebar}\n      />\n      <CHeaderBrand className=\"mx-auto d-lg-none\" to=\"/\">\n        <CIcon name=\"logo\" height=\"48\" alt=\"Logo\"/>\n      </CHeaderBrand>\n\n      <CHeaderNav className=\"d-md-down-none mr-auto\">\n        {/* <CHeaderNavItem className=\"px-3\" >\n          <CHeaderNavLink to=\"/dashboard\">Dashboard</CHeaderNavLink>\n        </CHeaderNavItem>\n        <CHeaderNavItem  className=\"px-3\">\n          <CHeaderNavLink to=\"/users\">Users</CHeaderNavLink>\n        </CHeaderNavItem>\n        <CHeaderNavItem className=\"px-3\">\n          <CHeaderNavLink>Settings</CHeaderNavLink>\n        </CHeaderNavItem> */}\n      </CHeaderNav>\n\n      <CHeaderNav className=\"px-3\">\n        {/* <TheHeaderDropdownNotif/> */}\n        {/* <TheHeaderDropdownTasks/> */}\n        {/* <TheHeaderDropdownMssg/> */}\n        <CHeaderNavItem className=\"px-3\">\n          <CHeaderNavLink>\n            {userdata.name} ({userRole})\n          </CHeaderNavLink>\n        </CHeaderNavItem>\n        <TheHeaderDropdown/>\n      </CHeaderNav>\n\n      <CSubheader className=\"px-3 justify-content-between\">\n        <CBreadcrumbRouter \n          className=\"border-0 c-subheader-nav m-0 px-0 px-md-3\" \n          routes={routes} \n        />\n          {/* <div className=\"d-md-down-none mfe-2 c-subheader-nav\">\n            <CLink className=\"c-subheader-nav-link\"href=\"#\">\n              <CIcon name=\"cil-speech\" alt=\"Settings\" />\n            </CLink>\n            <CLink \n              className=\"c-subheader-nav-link\" \n              aria-current=\"page\" \n              to=\"/dashboard\"\n            >\n              <CIcon name=\"cil-graph\" alt=\"Dashboard\" />&nbsp;Dashboard\n            </CLink>\n            <CLink className=\"c-subheader-nav-link\" href=\"#\">\n              <CIcon name=\"cil-settings\" alt=\"Settings\" />&nbsp;Settings\n            </CLink>\n          </div> */}\n      </CSubheader>\n    </CHeader>\n  )\n}\n\nexport default TheHeader\n","import React from 'react'\n// import {\n//   CBadge,\n//   CDropdown,\n//   CDropdownItem,\n//   CDropdownMenu,\n//   CDropdownToggle,\n// } from '@coreui/react'\n// import CIcon from '@coreui/icons-react';\nimport { FaUserCircle } from \"react-icons/fa\";\n\nconst TheHeaderDropdown = () => {\n  return (\n        <div className=\"c-avatar\">\n          <FaUserCircle size={32} />\n        </div>\n    // <CDropdown\n    //   inNav\n    //   className=\"c-header-nav-items mx-2\"\n    //   direction=\"down\"\n    // >\n    //   <CDropdownToggle className=\"c-header-nav-link\" caret={false}>\n    //   </CDropdownToggle>\n    //   <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n    //     {/* <CDropdownItem\n    //       header\n    //       tag=\"div\"\n    //       color=\"light\"\n    //       className=\"text-center\"\n    //     >\n    //       <strong>Account</strong>\n    //     </CDropdownItem>\n    //     <CDropdownItem>\n    //       <CIcon name=\"cil-bell\" className=\"mfe-2\" />\n    //       Updates\n    //       <CBadge color=\"info\" className=\"mfs-auto\">42</CBadge>\n    //     </CDropdownItem>\n    //     <CDropdownItem>\n    //       <CIcon name=\"cil-envelope-open\" className=\"mfe-2\" />\n    //       Messages\n    //       <CBadge color=\"success\" className=\"mfs-auto\">42</CBadge>\n    //     </CDropdownItem>\n    //     <CDropdownItem>\n    //       <CIcon name=\"cil-task\" className=\"mfe-2\" />\n    //       Tasks\n    //       <CBadge color=\"danger\" className=\"mfs-auto\">42</CBadge>\n    //     </CDropdownItem>\n    //     <CDropdownItem>\n    //       <CIcon name=\"cil-comment-square\" className=\"mfe-2\" />\n    //       Comments\n    //       <CBadge color=\"warning\" className=\"mfs-auto\">42</CBadge>\n    //     </CDropdownItem>\n    //     <CDropdownItem\n    //       header\n    //       tag=\"div\"\n    //       color=\"light\"\n    //       className=\"text-center\"\n    //     >\n    //       <strong>Settings</strong>\n    //     </CDropdownItem>\n    //     <CDropdownItem>\n    //       <CIcon name=\"cil-user\" className=\"mfe-2\" />Profile\n    //     </CDropdownItem>\n    //     <CDropdownItem>\n    //       <CIcon name=\"cil-settings\" className=\"mfe-2\" />\n    //       Settings\n    //     </CDropdownItem>\n    //     <CDropdownItem>\n    //       <CIcon name=\"cil-credit-card\" className=\"mfe-2\" />\n    //       Payments\n    //       <CBadge color=\"secondary\" className=\"mfs-auto\">42</CBadge>\n    //     </CDropdownItem>\n    //     <CDropdownItem>\n    //       <CIcon name=\"cil-file\" className=\"mfe-2\" />\n    //       Projects\n    //       <CBadge color=\"primary\" className=\"mfs-auto\">42</CBadge>\n    //     </CDropdownItem>\n    //     <CDropdownItem divider />\n    //     <CDropdownItem>\n    //       <CIcon name=\"cil-lock-locked\" className=\"mfe-2\" />\n    //       Logout\n    //     </CDropdownItem> */}\n    //   </CDropdownMenu>\n    // </CDropdown>\n  )\n}\n\nexport default TheHeaderDropdown\n","import React from 'react';\nimport CIcon from '@coreui/icons-react';\nimport Role from \"../constants/roles\";\nimport { FaSignOutAlt, FaUser, FaUsers, FaFileAlt, FaTachometerAlt, FaSearch } from \"react-icons/fa\";\nimport { getUserRole } from \"../utils/auth\";\n\nconst _nav =  [\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Dashboard',\n    to: '/dashboard',\n    icon: <FaTachometerAlt className=\"c-sidebar-nav-icon\" />,\n    badge: {\n      color: 'info',\n      text: 'NEW',\n    },\n    roles: \"*\"\n  },\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Cyber Tipline',\n    to: '/cyber-tipline',\n    icon: <FaFileAlt className=\"c-sidebar-nav-icon\" /> ,\n    roles: \"*\"\n  },\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Cari Cyber Tipline',\n    to: '/cyber-tipline/search',\n    icon: <FaSearch className=\"c-sidebar-nav-icon\" /> ,\n    roles: \"*\"\n  },\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Users',\n    to: '/user',\n    icon: <FaUsers className=\"c-sidebar-nav-icon\" />,\n    roles: [Role.MANAGER]\n  },\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'My Profile',\n    to: '/user/my-profile',\n    icon: <FaUser className=\"c-sidebar-nav-icon\" />,\n    roles: \"*\"\n  },\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Logout',\n    to: '/auth/logout',\n    icon: <FaSignOutAlt className=\"c-sidebar-nav-icon\" />,\n    roles: \"*\"\n  },\n  // user -> manager\n  // My Profile\n];\n\nlet filteredNavs = [];\nlet filteredNavChildrens = [];\nconst userRole = getUserRole();\n\nfilteredNavs = _nav.filter(n => {\n  if(n.roles) {\n    if(n.roles === \"*\") return true;\n    else if(n.roles.includes(userRole)) return true;\n    else return false;\n  } else if(n._children) {\n    filteredNavChildrens = n._children.filter(c => c.roles ? c.roles === \"*\" || c.roles.includes(userRole) : null);\n    n._children = filteredNavChildrens;\n    return n._children.length !== 0;\n  }\n  else return false;\n});\n\nexport default filteredNavs;\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CCreateElement,\n  CSidebar,\n  CSidebarBrand,\n  CSidebarNav,\n  CSidebarNavDivider,\n  CSidebarNavTitle,\n  CSidebarMinimizer,\n  CSidebarNavDropdown,\n  CSidebarNavItem,\n} from '@coreui/react'\n\nimport CIcon from '@coreui/icons-react'\n\n// sidebar nav config\nimport navigation from './_nav'\n\nconst TheSidebar = () => {\n  const dispatch = useDispatch()\n  const show = useSelector(state => state.sidebarShow)\n\n  return (\n    <CSidebar\n      show={show}\n      onShowChange={(val) => dispatch({type: 'set', sidebarShow: val })}\n    >\n      <CSidebarBrand className=\"d-md-down-none\" to=\"/\">\n        <CIcon\n          className=\"c-sidebar-brand-full\"\n          name=\"logo-negative\"\n          height={35}\n        />\n        <CIcon\n          className=\"c-sidebar-brand-minimized\"\n          name=\"sygnet\"\n          height={35}\n        />\n      </CSidebarBrand>\n      <CSidebarNav>\n\n        <CCreateElement\n          items={navigation}\n          components={{\n            CSidebarNavDivider,\n            CSidebarNavDropdown,\n            CSidebarNavItem,\n            CSidebarNavTitle\n          }}\n        />\n      </CSidebarNav>\n      <CSidebarMinimizer className=\"c-d-md-down-none\"/>\n    </CSidebar>\n  )\n}\n\nexport default React.memo(TheSidebar)\n","import React from 'react'\nimport {\n  TheContent,\n  TheSidebar,\n  TheFooter,\n  TheHeader\n} from './index'\n\nconst TheLayout = () => {\n\n  return (\n    <div className=\"c-app c-default-layout\">\n      <TheSidebar/>\n      <div className=\"c-wrapper\">\n        <TheHeader/>\n        <div className=\"c-body\">\n          <TheContent/>\n        </div>\n        <TheFooter/>\n      </div>\n    </div>\n  )\n}\n\nexport default TheLayout\n"],"sourceRoot":""}